<def tag="input" for="HoboFields::Types::Country">
        <% 
                options, attributes = attributes.partition_hash(%w(minLength items source))
                events, attributes = attributes.partition_hash(%w(source matcher sorter updater highlighter))
                attributes["name"] = param_name_for_this + "_completer"
                attributes["value"] ||= name(:no_wrapper => true, :if_present => true)
                country = ISO3166::Country(attributes["value"])
                attributes["value"] = country.translation(I18n.locale) if country.present?
                id = this.id unless this.nil?
                countries = ISO3166::Country.translations(I18n.locale).map {|key, value| {id: key, name: value}}
                options[:minLength] ||= 1
                options[:autoSelect] = true
                taxes = 21
                taxes = country.vat_rates["standard"] if country && country.vat_rates && country.vat_rates["standard"]
                add_data_rapid!(attributes, "select_country", :options => options, :events => events)
        %>
        <input for-type="string" autocomplete="off" merge-attrs type='text' data-provide='typeahead'/>
        <input for-type="string" name="#{param_name_for_this}" value="&country._?.alpha2" type="hidden" data-taxes="&taxes"/>
</def>